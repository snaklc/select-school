{"id":"node_modules/pg-connection-string/index.js","dependencies":[{"name":"C:\\Users\\hp\\Desktop\\ankageo-projects\\openlayers\\line\\package.json","includedInParent":true,"mtime":1603110307863},{"name":"C:\\Users\\hp\\Desktop\\ankageo-projects\\openlayers\\line\\node_modules\\pg-connection-string\\package.json","includedInParent":true,"mtime":1603109857062},{"name":"url","loc":{"line":3,"column":18},"parent":"C:\\Users\\hp\\Desktop\\ankageo-projects\\openlayers\\line\\node_modules\\pg-connection-string\\index.js","resolved":"C:\\Users\\hp\\AppData\\Roaming\\npm\\node_modules\\parcel-bundler\\node_modules\\url\\url.js"},{"name":"fs","loc":{"line":4,"column":17},"parent":"C:\\Users\\hp\\Desktop\\ankageo-projects\\openlayers\\line\\node_modules\\pg-connection-string\\index.js","resolved":"C:\\Users\\hp\\AppData\\Roaming\\npm\\node_modules\\parcel-bundler\\src\\builtins\\_empty.js"}],"generated":{"js":"'use strict'\n\nvar url = require('url')\nvar fs = require('fs')\n\n//Parse method copied from https://github.com/brianc/node-postgres\n//Copyright (c) 2010-2014 Brian Carlson (brian.m.carlson@gmail.com)\n//MIT License\n\n//parses a connection string\nfunction parse(str) {\n  //unix socket\n  if (str.charAt(0) === '/') {\n    var config = str.split(' ')\n    return { host: config[0], database: config[1] }\n  }\n\n  // url parse expects spaces encoded as %20\n  var result = url.parse(\n    / |%[^a-f0-9]|%[a-f0-9][^a-f0-9]/i.test(str) ? encodeURI(str).replace(/\\%25(\\d\\d)/g, '%$1') : str,\n    true\n  )\n  var config = result.query\n  for (var k in config) {\n    if (Array.isArray(config[k])) {\n      config[k] = config[k][config[k].length - 1]\n    }\n  }\n\n  var auth = (result.auth || ':').split(':')\n  config.user = auth[0]\n  config.password = auth.splice(1).join(':')\n\n  config.port = result.port\n  if (result.protocol == 'socket:') {\n    config.host = decodeURI(result.pathname)\n    config.database = result.query.db\n    config.client_encoding = result.query.encoding\n    return config\n  }\n  if (!config.host) {\n    // Only set the host if there is no equivalent query param.\n    config.host = result.hostname\n  }\n\n  // If the host is missing it might be a URL-encoded path to a socket.\n  var pathname = result.pathname\n  if (!config.host && pathname && /^%2f/i.test(pathname)) {\n    var pathnameSplit = pathname.split('/')\n    config.host = decodeURIComponent(pathnameSplit[0])\n    pathname = pathnameSplit.splice(1).join('/')\n  }\n  // result.pathname is not always guaranteed to have a '/' prefix (e.g. relative urls)\n  // only strip the slash if it is present.\n  if (pathname && pathname.charAt(0) === '/') {\n    pathname = pathname.slice(1) || null\n  }\n  config.database = pathname && decodeURI(pathname)\n\n  if (config.ssl === 'true' || config.ssl === '1') {\n    config.ssl = true\n  }\n\n  if (config.ssl === '0') {\n    config.ssl = false\n  }\n\n  if (config.sslcert || config.sslkey || config.sslrootcert || config.sslmode) {\n    config.ssl = {}\n  }\n\n  if (config.sslcert) {\n    config.ssl.cert = fs.readFileSync(config.sslcert).toString()\n  }\n\n  if (config.sslkey) {\n    config.ssl.key = fs.readFileSync(config.sslkey).toString()\n  }\n\n  if (config.sslrootcert) {\n    config.ssl.ca = fs.readFileSync(config.sslrootcert).toString()\n  }\n\n  switch (config.sslmode) {\n    case 'disable': {\n      config.ssl = false\n      break\n    }\n    case 'prefer':\n    case 'require':\n    case 'verify-ca':\n    case 'verify-full': {\n      break\n    }\n    case 'no-verify': {\n      config.ssl.rejectUnauthorized = false\n      break\n    }\n  }\n\n  return config\n}\n\nmodule.exports = parse\n\nparse.parse = parse\n"},"sourceMaps":{"js":{"mappings":[{"source":"node_modules/pg-connection-string/index.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/pg-connection-string/index.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/pg-connection-string/index.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/pg-connection-string/index.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/pg-connection-string/index.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/pg-connection-string/index.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/pg-connection-string/index.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/pg-connection-string/index.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/pg-connection-string/index.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/pg-connection-string/index.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/pg-connection-string/index.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/pg-connection-string/index.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/pg-connection-string/index.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/pg-connection-string/index.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/pg-connection-string/index.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/pg-connection-string/index.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/pg-connection-string/index.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/pg-connection-string/index.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/pg-connection-string/index.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/pg-connection-string/index.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/pg-connection-string/index.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/pg-connection-string/index.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/pg-connection-string/index.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/pg-connection-string/index.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/pg-connection-string/index.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/pg-connection-string/index.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/pg-connection-string/index.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/pg-connection-string/index.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/pg-connection-string/index.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/pg-connection-string/index.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/pg-connection-string/index.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/pg-connection-string/index.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/pg-connection-string/index.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/pg-connection-string/index.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/pg-connection-string/index.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/pg-connection-string/index.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/pg-connection-string/index.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/pg-connection-string/index.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/pg-connection-string/index.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/pg-connection-string/index.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/pg-connection-string/index.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules/pg-connection-string/index.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules/pg-connection-string/index.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules/pg-connection-string/index.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules/pg-connection-string/index.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules/pg-connection-string/index.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"node_modules/pg-connection-string/index.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"node_modules/pg-connection-string/index.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"node_modules/pg-connection-string/index.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"node_modules/pg-connection-string/index.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"node_modules/pg-connection-string/index.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"node_modules/pg-connection-string/index.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"node_modules/pg-connection-string/index.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"node_modules/pg-connection-string/index.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"node_modules/pg-connection-string/index.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"node_modules/pg-connection-string/index.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"node_modules/pg-connection-string/index.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"node_modules/pg-connection-string/index.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"node_modules/pg-connection-string/index.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"node_modules/pg-connection-string/index.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"node_modules/pg-connection-string/index.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"node_modules/pg-connection-string/index.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"node_modules/pg-connection-string/index.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"node_modules/pg-connection-string/index.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"node_modules/pg-connection-string/index.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"node_modules/pg-connection-string/index.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"node_modules/pg-connection-string/index.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"node_modules/pg-connection-string/index.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"node_modules/pg-connection-string/index.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"node_modules/pg-connection-string/index.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"node_modules/pg-connection-string/index.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"node_modules/pg-connection-string/index.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"node_modules/pg-connection-string/index.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"node_modules/pg-connection-string/index.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"node_modules/pg-connection-string/index.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"node_modules/pg-connection-string/index.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"node_modules/pg-connection-string/index.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"node_modules/pg-connection-string/index.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"node_modules/pg-connection-string/index.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"node_modules/pg-connection-string/index.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"node_modules/pg-connection-string/index.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"node_modules/pg-connection-string/index.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"node_modules/pg-connection-string/index.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}},{"source":"node_modules/pg-connection-string/index.js","original":{"line":84,"column":0},"generated":{"line":84,"column":0}},{"source":"node_modules/pg-connection-string/index.js","original":{"line":85,"column":0},"generated":{"line":85,"column":0}},{"source":"node_modules/pg-connection-string/index.js","original":{"line":86,"column":0},"generated":{"line":86,"column":0}},{"source":"node_modules/pg-connection-string/index.js","original":{"line":87,"column":0},"generated":{"line":87,"column":0}},{"source":"node_modules/pg-connection-string/index.js","original":{"line":88,"column":0},"generated":{"line":88,"column":0}},{"source":"node_modules/pg-connection-string/index.js","original":{"line":89,"column":0},"generated":{"line":89,"column":0}},{"source":"node_modules/pg-connection-string/index.js","original":{"line":90,"column":0},"generated":{"line":90,"column":0}},{"source":"node_modules/pg-connection-string/index.js","original":{"line":91,"column":0},"generated":{"line":91,"column":0}},{"source":"node_modules/pg-connection-string/index.js","original":{"line":92,"column":0},"generated":{"line":92,"column":0}},{"source":"node_modules/pg-connection-string/index.js","original":{"line":93,"column":0},"generated":{"line":93,"column":0}},{"source":"node_modules/pg-connection-string/index.js","original":{"line":94,"column":0},"generated":{"line":94,"column":0}},{"source":"node_modules/pg-connection-string/index.js","original":{"line":95,"column":0},"generated":{"line":95,"column":0}},{"source":"node_modules/pg-connection-string/index.js","original":{"line":96,"column":0},"generated":{"line":96,"column":0}},{"source":"node_modules/pg-connection-string/index.js","original":{"line":97,"column":0},"generated":{"line":97,"column":0}},{"source":"node_modules/pg-connection-string/index.js","original":{"line":98,"column":0},"generated":{"line":98,"column":0}},{"source":"node_modules/pg-connection-string/index.js","original":{"line":99,"column":0},"generated":{"line":99,"column":0}},{"source":"node_modules/pg-connection-string/index.js","original":{"line":100,"column":0},"generated":{"line":100,"column":0}},{"source":"node_modules/pg-connection-string/index.js","original":{"line":101,"column":0},"generated":{"line":101,"column":0}},{"source":"node_modules/pg-connection-string/index.js","original":{"line":102,"column":0},"generated":{"line":102,"column":0}},{"source":"node_modules/pg-connection-string/index.js","original":{"line":103,"column":0},"generated":{"line":103,"column":0}},{"source":"node_modules/pg-connection-string/index.js","original":{"line":104,"column":0},"generated":{"line":104,"column":0}},{"source":"node_modules/pg-connection-string/index.js","original":{"line":105,"column":0},"generated":{"line":105,"column":0}},{"source":"node_modules/pg-connection-string/index.js","original":{"line":106,"column":0},"generated":{"line":106,"column":0}},{"source":"node_modules/pg-connection-string/index.js","original":{"line":107,"column":0},"generated":{"line":107,"column":0}}],"sources":{"node_modules/pg-connection-string/index.js":"'use strict'\n\nvar url = require('url')\nvar fs = require('fs')\n\n//Parse method copied from https://github.com/brianc/node-postgres\n//Copyright (c) 2010-2014 Brian Carlson (brian.m.carlson@gmail.com)\n//MIT License\n\n//parses a connection string\nfunction parse(str) {\n  //unix socket\n  if (str.charAt(0) === '/') {\n    var config = str.split(' ')\n    return { host: config[0], database: config[1] }\n  }\n\n  // url parse expects spaces encoded as %20\n  var result = url.parse(\n    / |%[^a-f0-9]|%[a-f0-9][^a-f0-9]/i.test(str) ? encodeURI(str).replace(/\\%25(\\d\\d)/g, '%$1') : str,\n    true\n  )\n  var config = result.query\n  for (var k in config) {\n    if (Array.isArray(config[k])) {\n      config[k] = config[k][config[k].length - 1]\n    }\n  }\n\n  var auth = (result.auth || ':').split(':')\n  config.user = auth[0]\n  config.password = auth.splice(1).join(':')\n\n  config.port = result.port\n  if (result.protocol == 'socket:') {\n    config.host = decodeURI(result.pathname)\n    config.database = result.query.db\n    config.client_encoding = result.query.encoding\n    return config\n  }\n  if (!config.host) {\n    // Only set the host if there is no equivalent query param.\n    config.host = result.hostname\n  }\n\n  // If the host is missing it might be a URL-encoded path to a socket.\n  var pathname = result.pathname\n  if (!config.host && pathname && /^%2f/i.test(pathname)) {\n    var pathnameSplit = pathname.split('/')\n    config.host = decodeURIComponent(pathnameSplit[0])\n    pathname = pathnameSplit.splice(1).join('/')\n  }\n  // result.pathname is not always guaranteed to have a '/' prefix (e.g. relative urls)\n  // only strip the slash if it is present.\n  if (pathname && pathname.charAt(0) === '/') {\n    pathname = pathname.slice(1) || null\n  }\n  config.database = pathname && decodeURI(pathname)\n\n  if (config.ssl === 'true' || config.ssl === '1') {\n    config.ssl = true\n  }\n\n  if (config.ssl === '0') {\n    config.ssl = false\n  }\n\n  if (config.sslcert || config.sslkey || config.sslrootcert || config.sslmode) {\n    config.ssl = {}\n  }\n\n  if (config.sslcert) {\n    config.ssl.cert = fs.readFileSync(config.sslcert).toString()\n  }\n\n  if (config.sslkey) {\n    config.ssl.key = fs.readFileSync(config.sslkey).toString()\n  }\n\n  if (config.sslrootcert) {\n    config.ssl.ca = fs.readFileSync(config.sslrootcert).toString()\n  }\n\n  switch (config.sslmode) {\n    case 'disable': {\n      config.ssl = false\n      break\n    }\n    case 'prefer':\n    case 'require':\n    case 'verify-ca':\n    case 'verify-full': {\n      break\n    }\n    case 'no-verify': {\n      config.ssl.rejectUnauthorized = false\n      break\n    }\n  }\n\n  return config\n}\n\nmodule.exports = parse\n\nparse.parse = parse\n"},"lineCount":107}},"error":null,"hash":"8ad6e23a1e19e16304407e8a1c3eb92f","cacheData":{"env":{}}}