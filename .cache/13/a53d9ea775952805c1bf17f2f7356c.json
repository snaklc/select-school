{"id":"node_modules/pg-protocol/dist/messages.js","dependencies":[{"name":"C:\\Users\\hp\\Desktop\\ankageo-projects\\openlayers\\line\\node_modules\\pg-protocol\\dist\\messages.js.map","includedInParent":true,"mtime":499162500000},{"name":"C:\\Users\\hp\\Desktop\\ankageo-projects\\openlayers\\line\\node_modules\\pg-protocol\\src\\messages.ts","includedInParent":true,"mtime":499162500000},{"name":"C:\\Users\\hp\\Desktop\\ankageo-projects\\openlayers\\line\\package.json","includedInParent":true,"mtime":1603110307863},{"name":"C:\\Users\\hp\\Desktop\\ankageo-projects\\openlayers\\line\\node_modules\\pg-protocol\\package.json","includedInParent":true,"mtime":1603109857062}],"generated":{"js":"\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.parseComplete = {\n    name: \"parseComplete\" /* parseComplete */,\n    length: 5,\n};\nexports.bindComplete = {\n    name: \"bindComplete\" /* bindComplete */,\n    length: 5,\n};\nexports.closeComplete = {\n    name: \"closeComplete\" /* closeComplete */,\n    length: 5,\n};\nexports.noData = {\n    name: \"noData\" /* noData */,\n    length: 5,\n};\nexports.portalSuspended = {\n    name: \"portalSuspended\" /* portalSuspended */,\n    length: 5,\n};\nexports.replicationStart = {\n    name: \"replicationStart\" /* replicationStart */,\n    length: 4,\n};\nexports.emptyQuery = {\n    name: \"emptyQuery\" /* emptyQuery */,\n    length: 4,\n};\nexports.copyDone = {\n    name: \"copyDone\" /* copyDone */,\n    length: 4,\n};\nclass DatabaseError extends Error {\n    constructor(message, length, name) {\n        super(message);\n        this.length = length;\n        this.name = name;\n    }\n}\nexports.DatabaseError = DatabaseError;\nclass CopyDataMessage {\n    constructor(length, chunk) {\n        this.length = length;\n        this.chunk = chunk;\n        this.name = \"copyData\" /* copyData */;\n    }\n}\nexports.CopyDataMessage = CopyDataMessage;\nclass CopyResponse {\n    constructor(length, name, binary, columnCount) {\n        this.length = length;\n        this.name = name;\n        this.binary = binary;\n        this.columnTypes = new Array(columnCount);\n    }\n}\nexports.CopyResponse = CopyResponse;\nclass Field {\n    constructor(name, tableID, columnID, dataTypeID, dataTypeSize, dataTypeModifier, format) {\n        this.name = name;\n        this.tableID = tableID;\n        this.columnID = columnID;\n        this.dataTypeID = dataTypeID;\n        this.dataTypeSize = dataTypeSize;\n        this.dataTypeModifier = dataTypeModifier;\n        this.format = format;\n    }\n}\nexports.Field = Field;\nclass RowDescriptionMessage {\n    constructor(length, fieldCount) {\n        this.length = length;\n        this.fieldCount = fieldCount;\n        this.name = \"rowDescription\" /* rowDescription */;\n        this.fields = new Array(this.fieldCount);\n    }\n}\nexports.RowDescriptionMessage = RowDescriptionMessage;\nclass ParameterStatusMessage {\n    constructor(length, parameterName, parameterValue) {\n        this.length = length;\n        this.parameterName = parameterName;\n        this.parameterValue = parameterValue;\n        this.name = \"parameterStatus\" /* parameterStatus */;\n    }\n}\nexports.ParameterStatusMessage = ParameterStatusMessage;\nclass AuthenticationMD5Password {\n    constructor(length, salt) {\n        this.length = length;\n        this.salt = salt;\n        this.name = \"authenticationMD5Password\" /* authenticationMD5Password */;\n    }\n}\nexports.AuthenticationMD5Password = AuthenticationMD5Password;\nclass BackendKeyDataMessage {\n    constructor(length, processID, secretKey) {\n        this.length = length;\n        this.processID = processID;\n        this.secretKey = secretKey;\n        this.name = \"backendKeyData\" /* backendKeyData */;\n    }\n}\nexports.BackendKeyDataMessage = BackendKeyDataMessage;\nclass NotificationResponseMessage {\n    constructor(length, processId, channel, payload) {\n        this.length = length;\n        this.processId = processId;\n        this.channel = channel;\n        this.payload = payload;\n        this.name = \"notification\" /* notification */;\n    }\n}\nexports.NotificationResponseMessage = NotificationResponseMessage;\nclass ReadyForQueryMessage {\n    constructor(length, status) {\n        this.length = length;\n        this.status = status;\n        this.name = \"readyForQuery\" /* readyForQuery */;\n    }\n}\nexports.ReadyForQueryMessage = ReadyForQueryMessage;\nclass CommandCompleteMessage {\n    constructor(length, text) {\n        this.length = length;\n        this.text = text;\n        this.name = \"commandComplete\" /* commandComplete */;\n    }\n}\nexports.CommandCompleteMessage = CommandCompleteMessage;\nclass DataRowMessage {\n    constructor(length, fields) {\n        this.length = length;\n        this.fields = fields;\n        this.name = \"dataRow\" /* dataRow */;\n        this.fieldCount = fields.length;\n    }\n}\nexports.DataRowMessage = DataRowMessage;\nclass NoticeMessage {\n    constructor(length, message) {\n        this.length = length;\n        this.message = message;\n        this.name = \"notice\" /* notice */;\n    }\n}\nexports.NoticeMessage = NoticeMessage;\n"},"sourceMaps":{"js":{"version":3,"file":"messages.js","sourceRoot":"","sources":["../src/messages.ts"],"names":[],"mappings":";;AAoCa,QAAA,aAAa,GAAmB;IAC3C,IAAI,qCAA2B;IAC/B,MAAM,EAAE,CAAC;CACV,CAAA;AAEY,QAAA,YAAY,GAAmB;IAC1C,IAAI,mCAA0B;IAC9B,MAAM,EAAE,CAAC;CACV,CAAA;AAEY,QAAA,aAAa,GAAmB;IAC3C,IAAI,qCAA2B;IAC/B,MAAM,EAAE,CAAC;CACV,CAAA;AAEY,QAAA,MAAM,GAAmB;IACpC,IAAI,uBAAoB;IACxB,MAAM,EAAE,CAAC;CACV,CAAA;AAEY,QAAA,eAAe,GAAmB;IAC7C,IAAI,yCAA6B;IACjC,MAAM,EAAE,CAAC;CACV,CAAA;AAEY,QAAA,gBAAgB,GAAmB;IAC9C,IAAI,2CAA8B;IAClC,MAAM,EAAE,CAAC;CACV,CAAA;AAEY,QAAA,UAAU,GAAmB;IACxC,IAAI,+BAAwB;IAC5B,MAAM,EAAE,CAAC;CACV,CAAA;AAEY,QAAA,QAAQ,GAAmB;IACtC,IAAI,2BAAsB;IAC1B,MAAM,EAAE,CAAC;CACV,CAAA;AAsBD,MAAa,aAAc,SAAQ,KAAK;IAiBtC,YAAY,OAAe,EAAkB,MAAc,EAAkB,IAAiB;QAC5F,KAAK,CAAC,OAAO,CAAC,CAAA;QAD6B,WAAM,GAAN,MAAM,CAAQ;QAAkB,SAAI,GAAJ,IAAI,CAAa;IAE9F,CAAC;CACF;AApBD,sCAoBC;AAED,MAAa,eAAe;IAE1B,YAA4B,MAAc,EAAkB,KAAa;QAA7C,WAAM,GAAN,MAAM,CAAQ;QAAkB,UAAK,GAAL,KAAK,CAAQ;QADzD,SAAI,6BAAuB;IACiC,CAAC;CAC9E;AAHD,0CAGC;AAED,MAAa,YAAY;IAEvB,YACkB,MAAc,EACd,IAAiB,EACjB,MAAe,EAC/B,WAAmB;QAHH,WAAM,GAAN,MAAM,CAAQ;QACd,SAAI,GAAJ,IAAI,CAAa;QACjB,WAAM,GAAN,MAAM,CAAS;QAG/B,IAAI,CAAC,WAAW,GAAG,IAAI,KAAK,CAAC,WAAW,CAAC,CAAA;IAC3C,CAAC;CACF;AAVD,oCAUC;AAED,MAAa,KAAK;IAChB,YACkB,IAAY,EACZ,OAAe,EACf,QAAgB,EAChB,UAAkB,EAClB,YAAoB,EACpB,gBAAwB,EACxB,MAAY;QANZ,SAAI,GAAJ,IAAI,CAAQ;QACZ,YAAO,GAAP,OAAO,CAAQ;QACf,aAAQ,GAAR,QAAQ,CAAQ;QAChB,eAAU,GAAV,UAAU,CAAQ;QAClB,iBAAY,GAAZ,YAAY,CAAQ;QACpB,qBAAgB,GAAhB,gBAAgB,CAAQ;QACxB,WAAM,GAAN,MAAM,CAAM;IAC3B,CAAC;CACL;AAVD,sBAUC;AAED,MAAa,qBAAqB;IAGhC,YAA4B,MAAc,EAAkB,UAAkB;QAAlD,WAAM,GAAN,MAAM,CAAQ;QAAkB,eAAU,GAAV,UAAU,CAAQ;QAF9D,SAAI,yCAA0C;QAG5D,IAAI,CAAC,MAAM,GAAG,IAAI,KAAK,CAAC,IAAI,CAAC,UAAU,CAAC,CAAA;IAC1C,CAAC;CACF;AAND,sDAMC;AAED,MAAa,sBAAsB;IAEjC,YACkB,MAAc,EACd,aAAqB,EACrB,cAAsB;QAFtB,WAAM,GAAN,MAAM,CAAQ;QACd,kBAAa,GAAb,aAAa,CAAQ;QACrB,mBAAc,GAAd,cAAc,CAAQ;QAJxB,SAAI,2CAA2C;IAK5D,CAAC;CACL;AAPD,wDAOC;AAED,MAAa,yBAAyB;IAEpC,YAA4B,MAAc,EAAkB,IAAY;QAA5C,WAAM,GAAN,MAAM,CAAQ;QAAkB,SAAI,GAAJ,IAAI,CAAQ;QADxD,SAAI,+DAAqD;IACE,CAAC;CAC7E;AAHD,8DAGC;AAED,MAAa,qBAAqB;IAEhC,YAA4B,MAAc,EAAkB,SAAiB,EAAkB,SAAiB;QAApF,WAAM,GAAN,MAAM,CAAQ;QAAkB,cAAS,GAAT,SAAS,CAAQ;QAAkB,cAAS,GAAT,SAAS,CAAQ;QADhG,SAAI,yCAA0C;IACqD,CAAC;CACrH;AAHD,sDAGC;AAED,MAAa,2BAA2B;IAEtC,YACkB,MAAc,EACd,SAAiB,EACjB,OAAe,EACf,OAAe;QAHf,WAAM,GAAN,MAAM,CAAQ;QACd,cAAS,GAAT,SAAS,CAAQ;QACjB,YAAO,GAAP,OAAO,CAAQ;QACf,YAAO,GAAP,OAAO,CAAQ;QALjB,SAAI,qCAAwC;IAMzD,CAAC;CACL;AARD,kEAQC;AAED,MAAa,oBAAoB;IAE/B,YAA4B,MAAc,EAAkB,MAAc;QAA9C,WAAM,GAAN,MAAM,CAAQ;QAAkB,WAAM,GAAN,MAAM,CAAQ;QAD1D,SAAI,uCAAyC;IACgB,CAAC;CAC/E;AAHD,oDAGC;AAED,MAAa,sBAAsB;IAEjC,YAA4B,MAAc,EAAkB,IAAY;QAA5C,WAAM,GAAN,MAAM,CAAQ;QAAkB,SAAI,GAAJ,IAAI,CAAQ;QADxD,SAAI,2CAA2C;IACY,CAAC;CAC7E;AAHD,wDAGC;AAED,MAAa,cAAc;IAGzB,YAAmB,MAAc,EAAS,MAAa;QAApC,WAAM,GAAN,MAAM,CAAQ;QAAS,WAAM,GAAN,MAAM,CAAO;QADvC,SAAI,2BAAmC;QAErD,IAAI,CAAC,UAAU,GAAG,MAAM,CAAC,MAAM,CAAA;IACjC,CAAC;CACF;AAND,wCAMC;AAED,MAAa,aAAa;IACxB,YAA4B,MAAc,EAAkB,OAA2B;QAA3D,WAAM,GAAN,MAAM,CAAQ;QAAkB,YAAO,GAAP,OAAO,CAAoB;QACvE,SAAI,yBAAqB;IADiD,CAAC;CAkB5F;AAnBD,sCAmBC","sourcesContent":["export type Mode = 'text' | 'binary'\n\nexport const enum MessageName {\n  parseComplete = 'parseComplete',\n  bindComplete = 'bindComplete',\n  closeComplete = 'closeComplete',\n  noData = 'noData',\n  portalSuspended = 'portalSuspended',\n  replicationStart = 'replicationStart',\n  emptyQuery = 'emptyQuery',\n  copyDone = 'copyDone',\n  copyData = 'copyData',\n  rowDescription = 'rowDescription',\n  parameterStatus = 'parameterStatus',\n  backendKeyData = 'backendKeyData',\n  notification = 'notification',\n  readyForQuery = 'readyForQuery',\n  commandComplete = 'commandComplete',\n  dataRow = 'dataRow',\n  copyInResponse = 'copyInResponse',\n  copyOutResponse = 'copyOutResponse',\n  authenticationOk = 'authenticationOk',\n  authenticationMD5Password = 'authenticationMD5Password',\n  authenticationCleartextPassword = 'authenticationCleartextPassword',\n  authenticationSASL = 'authenticationSASL',\n  authenticationSASLContinue = 'authenticationSASLContinue',\n  authenticationSASLFinal = 'authenticationSASLFinal',\n  error = 'error',\n  notice = 'notice',\n}\n\nexport interface BackendMessage {\n  name: MessageName\n  length: number\n}\n\nexport const parseComplete: BackendMessage = {\n  name: MessageName.parseComplete,\n  length: 5,\n}\n\nexport const bindComplete: BackendMessage = {\n  name: MessageName.bindComplete,\n  length: 5,\n}\n\nexport const closeComplete: BackendMessage = {\n  name: MessageName.closeComplete,\n  length: 5,\n}\n\nexport const noData: BackendMessage = {\n  name: MessageName.noData,\n  length: 5,\n}\n\nexport const portalSuspended: BackendMessage = {\n  name: MessageName.portalSuspended,\n  length: 5,\n}\n\nexport const replicationStart: BackendMessage = {\n  name: MessageName.replicationStart,\n  length: 4,\n}\n\nexport const emptyQuery: BackendMessage = {\n  name: MessageName.emptyQuery,\n  length: 4,\n}\n\nexport const copyDone: BackendMessage = {\n  name: MessageName.copyDone,\n  length: 4,\n}\n\ninterface NoticeOrError {\n  message: string | undefined\n  severity: string | undefined\n  code: string | undefined\n  detail: string | undefined\n  hint: string | undefined\n  position: string | undefined\n  internalPosition: string | undefined\n  internalQuery: string | undefined\n  where: string | undefined\n  schema: string | undefined\n  table: string | undefined\n  column: string | undefined\n  dataType: string | undefined\n  constraint: string | undefined\n  file: string | undefined\n  line: string | undefined\n  routine: string | undefined\n}\n\nexport class DatabaseError extends Error implements NoticeOrError {\n  public severity: string | undefined\n  public code: string | undefined\n  public detail: string | undefined\n  public hint: string | undefined\n  public position: string | undefined\n  public internalPosition: string | undefined\n  public internalQuery: string | undefined\n  public where: string | undefined\n  public schema: string | undefined\n  public table: string | undefined\n  public column: string | undefined\n  public dataType: string | undefined\n  public constraint: string | undefined\n  public file: string | undefined\n  public line: string | undefined\n  public routine: string | undefined\n  constructor(message: string, public readonly length: number, public readonly name: MessageName) {\n    super(message)\n  }\n}\n\nexport class CopyDataMessage {\n  public readonly name = MessageName.copyData\n  constructor(public readonly length: number, public readonly chunk: Buffer) {}\n}\n\nexport class CopyResponse {\n  public readonly columnTypes: number[]\n  constructor(\n    public readonly length: number,\n    public readonly name: MessageName,\n    public readonly binary: boolean,\n    columnCount: number\n  ) {\n    this.columnTypes = new Array(columnCount)\n  }\n}\n\nexport class Field {\n  constructor(\n    public readonly name: string,\n    public readonly tableID: number,\n    public readonly columnID: number,\n    public readonly dataTypeID: number,\n    public readonly dataTypeSize: number,\n    public readonly dataTypeModifier: number,\n    public readonly format: Mode\n  ) {}\n}\n\nexport class RowDescriptionMessage {\n  public readonly name: MessageName = MessageName.rowDescription\n  public readonly fields: Field[]\n  constructor(public readonly length: number, public readonly fieldCount: number) {\n    this.fields = new Array(this.fieldCount)\n  }\n}\n\nexport class ParameterStatusMessage {\n  public readonly name: MessageName = MessageName.parameterStatus\n  constructor(\n    public readonly length: number,\n    public readonly parameterName: string,\n    public readonly parameterValue: string\n  ) {}\n}\n\nexport class AuthenticationMD5Password implements BackendMessage {\n  public readonly name: MessageName = MessageName.authenticationMD5Password\n  constructor(public readonly length: number, public readonly salt: Buffer) {}\n}\n\nexport class BackendKeyDataMessage {\n  public readonly name: MessageName = MessageName.backendKeyData\n  constructor(public readonly length: number, public readonly processID: number, public readonly secretKey: number) {}\n}\n\nexport class NotificationResponseMessage {\n  public readonly name: MessageName = MessageName.notification\n  constructor(\n    public readonly length: number,\n    public readonly processId: number,\n    public readonly channel: string,\n    public readonly payload: string\n  ) {}\n}\n\nexport class ReadyForQueryMessage {\n  public readonly name: MessageName = MessageName.readyForQuery\n  constructor(public readonly length: number, public readonly status: string) {}\n}\n\nexport class CommandCompleteMessage {\n  public readonly name: MessageName = MessageName.commandComplete\n  constructor(public readonly length: number, public readonly text: string) {}\n}\n\nexport class DataRowMessage {\n  public readonly fieldCount: number\n  public readonly name: MessageName = MessageName.dataRow\n  constructor(public length: number, public fields: any[]) {\n    this.fieldCount = fields.length\n  }\n}\n\nexport class NoticeMessage implements BackendMessage, NoticeOrError {\n  constructor(public readonly length: number, public readonly message: string | undefined) {}\n  public readonly name = MessageName.notice\n  public severity: string | undefined\n  public code: string | undefined\n  public detail: string | undefined\n  public hint: string | undefined\n  public position: string | undefined\n  public internalPosition: string | undefined\n  public internalQuery: string | undefined\n  public where: string | undefined\n  public schema: string | undefined\n  public table: string | undefined\n  public column: string | undefined\n  public dataType: string | undefined\n  public constraint: string | undefined\n  public file: string | undefined\n  public line: string | undefined\n  public routine: string | undefined\n}\n"]}},"error":null,"hash":"e64ebc2404867817414695e60d3fc224","cacheData":{"env":{}}}